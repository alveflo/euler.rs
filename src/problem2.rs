// Each new term in the Fibonacci sequence
// is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence
// whose values do not exceed four million, find the sum
// of the even-valued terms.

fn fib(n: i32) -> i32 {
  if n == 1 || n == 2 {
    return 1;
  } else {
    return fib(n-1) + fib(n-2);
  }
}

fn even_fib_sum(n: i32, sum: i32) -> i32 {
  let result = fib(n);
  if result % 2 == 0 {
    return even_fib_sum(n+1, sum+result);
  } else if result > 4000000 {
    return sum;
  } else {
    return even_fib_sum(n+1, sum)
  }
}

pub fn run() {
  println!("Problem2: {}", even_fib_sum(1, 0))
}